#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

// ===========================================
// 1. Deklarasi Variabel Global dan Array
// -------------------------------------------
// Variabel global dan array digunakan untuk menyimpan daftar barang,
// harga, data keranjang (namaBarang, jumlah, diskon, dan hargaBarang),
// serta variabel-variabel untuk perhitungan total.
// sortedIndex adalah array yang digunakan un`tuk mengurutkan data pada struk.
int pilihan1 = 0;
int pilihan2 = 0;
char barang[5][20] = {"Buku Tulis", "Pensil", "Penghapus", "Penggaris", "Bujur Sangkar"};
int harga[5] = {5000, 2000, 1000, 1000, 500};

char namaBarang[5][20];   // Menyimpan nama barang yang dipilih
int hargaBarang[5];       // Menyimpan harga barang yang dipilih
int jumlah[5];            // Menyimpan jumlah barang yang dipilih
float diskon[5];          // Menyimpan diskon tiap barang

int sortedIndex[5];       // Menyimpan indeks untuk pengurutan barang berdasarkan jumlah
int totalHarga = 0;       // Total harga sebelum diskon
int totalDiskon = 0;      // Total diskon yang diberikan
int totalBayar;           // Total yang harus dibayar (setelah dikurangi diskon)
int bayar;                // Uang yang dibayarkan oleh pelanggan
int lastIndex = 0;        // Menyimpan jumlah barang yang telah dimasukkan ke keranjang

// ===========================================
// 2. Fungsi Utilitas: Print Garis
// -------------------------------------------
// Fungsi untuk mencetak garis horizontal sepanjang 'length' karakter,
// berguna untuk mempercantik tampilan output program.
void printGaris(int length)
{
    for (int i = 0; i < length; i++) {
        printf("=");
    }
    printf("\n");
}

// ===========================================
// 3. Fungsi Menampilkan Pilihan Barang
// -------------------------------------------
// Menampilkan menu pilihan barang yang tersedia beserta opsi untuk
// struk pembayaran, reset pilihan, dan keluar. Menggunakan perulangan
// for untuk menampilkan setiap barang dalam array 'barang'.
void printPilihan()
{
    printf("\nSelamat Datang di Toko Skensa\nSilahkan pilih barang yang Anda Inginkan\n");
    printGaris(37);
    printf("| %-3s | %-13s | %-11s |\n", "No.", "Nama Barang", "Harga");
    printGaris(37);
    for (int i = 0; i < 5; i++) {
        printf("| %-3d | %-13s | Rp.%-8d |\n", i + 1, barang[i], harga[i]);
    }
    printGaris(37);
    printf("99. Struk Pembayaran\n");
    printf("55. Reset Pilihan\n");
    printf("00. Keluar\n");
    printGaris(37);
}

// ===========================================
// 4. Fungsi Menghitung Diskon
// -------------------------------------------
// Fungsi cekDiskon menerima harga dan jumlah barang sebagai parameter.
// Menggunakan struktur percabangan if-else untuk menentukan besar diskon:
// - Diskon 15% jika jumlah > 5
// - Diskon 10% jika jumlah > 3
// - Tidak ada diskon jika jumlah <= 3
float cekDiskon(int harga, int jumlah)
{
    if (jumlah > 5) {
        return jumlah * harga * 0.15;
    } else if (jumlah > 3) {
        return jumlah * harga * 0.1;
    }
    return 0;
}

// ===========================================
// 5. Fungsi Mendapatkan Waktu Sekarang
// -------------------------------------------
// Menggunakan fungsi dari library time.h untuk mendapatkan waktu
// saat ini dan mengembalikan string waktu tersebut.
char *getTimeNow()
{
    time_t rawtime;
    struct tm *timeinfo;
    time(&rawtime);
    timeinfo = localtime(&rawtime);
    return asctime(timeinfo);  // Format waktu standar, contoh: "Tue Mar  7 12:34:56 2025\n"
}

// ===========================================
// 6. Fungsi Menghasilkan ID Unik
// -------------------------------------------
// Menghasilkan ID unik berdasarkan waktu (tahun, bulan, hari, jam, menit, detik).
// ID digunakan sebagai nama file struk. Menggunakan sprintf untuk format string.
char *generateID()
{
    time_t t = time(NULL);
    struct tm tm = *localtime(&t);
    char *id = malloc(sizeof(char) * 20);  // Mengalokasikan memori untuk ID
    sprintf(id, "%04d%02d%02d%02d%02d%02d",
            tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
            tm.tm_hour, tm.tm_min, tm.tm_sec);
    return id;
}

// ===========================================
// 7. Fungsi Mencetak Struk ke File
// -------------------------------------------
// Fungsi cetakStruk menulis data transaksi ke dalam file teks. Data yang
// ditulis mencakup detail barang, total harga, diskon, tagihan, pembayaran,
// dan waktu transaksi. File dinamai menggunakan ID unik dari generateID().
void cetakStruk(int totalHarga, int totalDiskon, int totalBayar, int bayar, int kembalian)
{
    FILE *file;
    char *id = generateID();
    char filename[strlen(id) + 5];  // Memastikan ukuran untuk nama file: id + ".txt" + null terminator
    sprintf(filename, "%s.txt", id);

    file = fopen(filename, "w");
    if (file == NULL) {
        printf("Error membuat file!\n");
        free(id);
        return;
    }
    fprintf(file, "=========================================================================\n");
    fprintf(file, "                               Toko SKENSA                               \n");
    fprintf(file, "                   Jl. HOS Cokroaminoto No 84 Denpasar                   \n");
    fprintf(file, "                                  Bali                                   \n");
    fprintf(file, "                             Telp: 0816285791                            \n");
    fprintf(file, "ID Struk: %s\n", id);
    fprintf(file, "=========================================================================\n");
    fprintf(file, "|Nama Barang        |Harga      |Total Harga|Diskon  |\n");
    // Perulangan for untuk mencetak tiap item yang dipesan
    for (int i = 0; i < lastIndex; i++) {
        float total = jumlah[i] * hargaBarang[i];
        fprintf(file, "| %2dx %-15s | Rp.%-8d | Rp.%-8.0f | Rp.%-7.0f |\n",
                jumlah[i], namaBarang[i], hargaBarang[i], total, diskon[i]);
    }
    fprintf(file, "=========================================================================\n");
    fprintf(file, "Total Harga = Rp %d\n", totalHarga);
    fprintf(file, "Total Diskon = Rp %d\n", totalDiskon);
    fprintf(file, "Tagihan = Rp %d\n", totalBayar);
    fprintf(file, "Pembayaran = Rp %d\n", bayar);
    fprintf(file, "Kembalian = Rp %d\n\n\n", kembalian);

    char *timeNow = getTimeNow();
    fprintf(file, "Waktu : %s", timeNow);
    fclose(file);

    printf("Struk sudah dicetak pada file %s\n", filename);
    free(id);
}

// ===========================================
// 8. Fungsi Utama (main)
// -------------------------------------------
// Fungsi main menjalankan loop utama program yang menampilkan menu,
// menerima input pilihan dari pengguna, dan melakukan operasi sesuai
// dengan pilihan (menambah barang ke keranjang, reset, cetak struk, atau keluar).
int main()
{
    while (1) {
        // Menampilkan menu pilihan barang
        printPilihan();
        printf("Input pilihan yang Anda inginkan : ");
        scanf("%d", &pilihan1);

        // ============================
        // Opsi Reset Pilihan (Input 55)
        // ----------------------------
        // Menggunakan while untuk mengulang jika pengguna memilih reset.
        // Struktur percabangan while digunakan agar pengguna dapat melakukan reset
        // beberapa kali jika diinginkan.
        while (pilihan1 == 55) {
            // Reset data keranjang dengan mengosongkan array dan mengembalikan nilai ke 0.
            for (int i = 0; i < 5; i++) {
                strcpy(namaBarang[i], "");
                jumlah[i] = 0;
                diskon[i] = 0;
                hargaBarang[i] = 0;
            }
            lastIndex = 0;
            totalHarga = 0;
            totalDiskon = 0;

            // Tampilkan ulang menu pilihan
            printPilihan();
            printf("Input pilihan yang Anda inginkan : ");
            scanf("%d", &pilihan1);
        }

        // ============================
        // Opsi Cetak Struk (Input 99)
        // ----------------------------
        // Jika pengguna memilih 99, program akan mencetak struk pembayaran.
        if (pilihan1 == 99) {
            if (lastIndex > 0) {
                // Inisialisasi ulang sortedIndex untuk pengurutan barang berdasarkan jumlah
                for (int i = 0; i < lastIndex; i++) {
                    sortedIndex[i] = i;
                }
                // Pengurutan menggunakan algoritma Bubble Sort (descending)
                for (int i = 0; i < lastIndex - 1; i++) {
                    for (int j = 0; j < lastIndex - i - 1; j++) {
                        if (jumlah[sortedIndex[j]] < jumlah[sortedIndex[j + 1]]) {
                            int temp = sortedIndex[j];
                            sortedIndex[j] = sortedIndex[j + 1];
                            sortedIndex[j + 1] = temp;
                        }
                    }
                }

                // Menghitung ulang total harga dan total diskon
                totalHarga = 0;
                totalDiskon = 0;
                printGaris(97);
                printf("| %-3s | %-15s | %-15s | %-15s | %-15s | %-15s |\n",
                       "No.", "Jumlah", "Nama Barang", "Harga", "Total", "Diskon");
                // Perulangan for untuk menampilkan setiap item secara terurut
                for (int i = 0; i < lastIndex; i++) {
                    int index = sortedIndex[i];
                    int itemTotal = jumlah[index] * hargaBarang[index];
                    totalHarga += itemTotal;
                    totalDiskon += (int)diskon[index];
                    printf("| %-3d | %-15d | %-15s | Rp.%-12d | Rp.%-12d | Rp.%-12.0f |\n",
                           i + 1, jumlah[index], namaBarang[index], hargaBarang[index], itemTotal, diskon[index]);
                }
                printGaris(97);
                printf("\nTotal Harga  = Rp. %d,-\n", totalHarga);
                printf("Total Diskon = Rp. %d,-\n", totalDiskon);
                totalBayar = totalHarga - totalDiskon;
                printf("Total Bayar  = Rp. %d,-\n", totalBayar);
                printGaris(97);
                printf("\nMasukkan uang bayar = ");
                scanf("%d", &bayar);
                // Perulangan while untuk validasi pembayaran minimal
                while (bayar < totalBayar) {
                    printf("Uang yang dimasukkan kurang!\n");
                    printf("Masukkan uang bayar = ");
                    scanf("%d", &bayar);
                }
                printf("Kembalian = %d\n", bayar - totalBayar);
                // Panggil fungsi cetakStruk untuk menyimpan data transaksi ke file
                cetakStruk(totalHarga, totalDiskon, totalBayar, bayar, bayar - totalBayar);
                return 0;
            } else {
                printf("Anda belum memilih barang!\n\n");
            }
        }

        // ============================
        // Opsi Keluar (Input 0 atau 00)
        // ----------------------------
        // Jika pengguna memilih 0, program akan berhenti.
        if (pilihan1 == 0) {
            return 0;
        }

        // ============================
        // Opsi Menambah Barang ke Keranjang (Input 1-5)
        // ----------------------------
        // Jika input antara 1 sampai 5, program meminta jumlah barang yang akan dibeli.
        if (pilihan1 > 0 && pilihan1 <= 5) {
            printf("Masukkan Jumlah Barang : ");
            scanf("%d", &pilihan2);
            printf("\n");

            int found = 0;
            // Perulangan for untuk memeriksa apakah barang sudah ada di keranjang
            // Menggunakan fungsi strcasecmp untuk perbandingan string (tidak case sensitive)
            for (int i = 0; i < lastIndex; i++) {
                if (strcasecmp(barang[pilihan1 - 1], namaBarang[i]) == 0) {
                    // Jika sudah ada, tambahkan jumlah dan perbarui diskon
                    jumlah[i] += pilihan2;
                    diskon[i] = cekDiskon(hargaBarang[i], jumlah[i]);
                    found = 1;
                    break;  // Keluar dari perulangan jika sudah ditemukan
                }
            }
            // Jika barang belum ada di keranjang, tambahkan sebagai entri baru
            if (!found) {
                strcpy(namaBarang[lastIndex], barang[pilihan1 - 1]);
                jumlah[lastIndex] = pilihan2;
                hargaBarang[lastIndex] = harga[pilihan1 - 1];
                diskon[lastIndex] = cekDiskon(harga[pilihan1 - 1], pilihan2);
                lastIndex++;
            }
            // Menampilkan isi keranjang setelah penambahan barang
            printf("Keranjang Anda:\n");
            for (int i = 0; i < lastIndex; i++) {
                printf("%s (%dx)\n", namaBarang[i], jumlah[i]);
            }
            printGaris(40);
        } else {
            // ============================
            // Opsi Barang Tidak Ditemukan
            // ----------------------------
            // Jika input tidak sesuai dengan opsi yang ada, tampilkan pesan error.
            printf("Barang tidak ditemukan!\n\n");
        }
    }
    return 0;
}
